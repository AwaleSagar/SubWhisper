name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
        
    - name: Check code formatting with Black
      run: |
        black --check --line-length=100 --exclude="venv/|env/|tts/|subwhisper_env/" .
        
    - name: Check imports with isort
      run: |
        isort --check --profile black --line-length=100 --skip venv --skip env --skip tts --skip subwhisper_env .
        
    - name: Lint with flake8
      run: |
        flake8 src tests --count --max-line-length=100 --ignore=E203,W503,E501,D100,D101,D102,D103,D104 --show-source --statistics
        
    - name: Type check with mypy
      run: |
        mypy --config-file=setup.cfg src

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install pytest pytest-cov
        
    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        
    - name: Test with pytest
      run: |
        pytest --cov=src tests/ -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Upload package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/ 